[{"description":"\nReturns a color from\n\n","commentRange":{"start":2,"end":15},"context":{"type":"function","name":"color","code":"\n    @return map-fetch($bruce-colors, $name);\n","line":{"start":16,"end":18}},"group":["functions"],"return":{"type":"color","description":"uses `map-fetch()` to return the value of `$name` from `$bruce-colors`"},"example":[{"type":"scss","code":".class {\n\tbackground-color: color('red');\n}"},{"type":"scss","code":".class {\n\tbackground-color: color('red');\n}"}],"access":"public","require":[],"file":{"path":"functions/_color.scss","name":"_color.scss"}},{"description":"\nreturns a map of the four property shorthand\n\n","commentRange":{"start":2,"end":7},"context":{"type":"function","name":"fourProps","code":"\n    $length: length($props);\n\n    $top:       nth($props, 1);\n    $right:     nth($props, 1);\n    $bottom:    nth($props, 1);\n    $left:      nth($props, 1);\n\n    @if ($length == 2) {\n        $right:     nth($props, 2);\n        $left:      nth($props, 2);\n    }\n\n    @if ($length == 3) {\n        $right:     nth($props, 2);\n        $bottom:    nth($props, 3);\n        $left:      nth($props, 2);\n    }\n\n    @if ($length == 4) {\n        $right:     nth($props, 2);\n        $bottom:    nth($props, 3);\n        $left:      nth($props, 4);\n    }\n\n\n    @return (\n        top: $top,     \n        right: $right,   \n        bottom: $bottom,  \n        left: $left  \n    );\n","line":{"start":8,"end":40}},"group":["functions"],"return":{"type":"map"},"access":"public","require":[],"file":{"path":"functions/_fourProps.scss","name":"_fourProps.scss"},"usedBy":[{"description":"\nReturns 4 margin props\n","context":{"type":"mixin","name":"margin","code":"\n    $propMap: fourProps($props...);\n    margin-top: map-get($propMap, top);   \n    margin-right: map-get($propMap, right);\n    margin-bottom: map-get($propMap, bottom);\n    margin-left: map-get($propMap, left);\n","line":{"start":14,"end":20}}},{"description":"\nReturns 4 padding props\n","context":{"type":"mixin","name":"padding","code":"\n    $propMap: fourProps($props...);\n    padding-top: map-get($propMap, top);   \n    padding-right: map-get($propMap, right);\n    padding-bottom: map-get($propMap, bottom);\n    padding-left: map-get($propMap, left);\n","line":{"start":31,"end":37}}}]},{"description":"\nReturns a grey value from 0 - 100\n\n","commentRange":{"start":3,"end":10},"context":{"type":"function","name":"grey","code":"\n    @return hsla(0, 0, $var, $opacity);\n","line":{"start":12,"end":14}},"group":["functions"],"parameter":[{"type":"number","name":"var","description":"(50)        The level of grey from 0 to 100"},{"type":"number","name":"opacity","description":"(1)    The level of opacity from 0 to 1"}],"return":{"type":"color","description":"Sass HSLA that will be compiled to hex\n"},"access":"public","require":[],"file":{"path":"functions/_grey.scss","name":"_grey.scss"}},{"description":"\nThe Grid\n\n","commentRange":{"start":2,"end":6},"context":{"type":"variable","name":"gutter","value":"1rem","scope":"default","line":{"start":7,"end":7}},"group":["structure"],"access":"public","file":{"path":"layout/_grid.scss","name":"_grid.scss"}},{"description":"\nPadding Tools\n","commentRange":{"start":2,"end":6},"context":{"type":"mixin","name":"bruce-structure-padding-all","code":"\n    @include bruce-structure-padding;\n    @include bruce-structure-padding2;\n    @include bruce-structure-padding-hard;\n    @include bruce-structure-padding-mobile;\n    @include bruce-structure-padding-row;\n    @include bruce-structure-flush;\n","line":{"start":8,"end":16}},"group":["structure"],"access":"public","require":[{"type":"mixin","name":"bruce-structure-padding"},{"type":"mixin","name":"bruce-structure-padding2"},{"type":"mixin","name":"bruce-structure-padding-hard"},{"type":"mixin","name":"bruce-structure-padding-mobile"},{"type":"mixin","name":"bruce-structure-padding-row"}],"file":{"path":"structure/_padding.scss","name":"_padding.scss"}},{"description":"\nBase Padding\n","commentRange":{"start":18,"end":21},"context":{"type":"mixin","name":"bruce-structure-padding","code":"\n    .padding {\n        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {\n            padding: 1rem;\n        }\n    }  \n","line":{"start":22,"end":28}},"group":["structure"],"access":"public","require":[{"type":"mixin","name":"bruce-breakpoint"}],"file":{"path":"structure/_padding.scss","name":"_padding.scss"},"usedBy":[{"description":"\nPadding Tools\n","context":{"type":"mixin","name":"bruce-structure-padding-all","code":"\n    @include bruce-structure-padding;\n    @include bruce-structure-padding2;\n    @include bruce-structure-padding-hard;\n    @include bruce-structure-padding-mobile;\n    @include bruce-structure-padding-row;\n    @include bruce-structure-flush;\n","line":{"start":8,"end":16}}}]},{"description":"\nDouble Padding\n","commentRange":{"start":30,"end":33},"context":{"type":"mixin","name":"bruce-structure-padding2","code":"\n    .padding2 {\n        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {\n            padding: 2rem;\n        }\n    }\n","line":{"start":34,"end":40}},"group":["structure"],"access":"public","require":[{"type":"mixin","name":"bruce-breakpoint"}],"file":{"path":"structure/_padding.scss","name":"_padding.scss"},"usedBy":[{"description":"\nPadding Tools\n","context":{"type":"mixin","name":"bruce-structure-padding-all","code":"\n    @include bruce-structure-padding;\n    @include bruce-structure-padding2;\n    @include bruce-structure-padding-hard;\n    @include bruce-structure-padding-mobile;\n    @include bruce-structure-padding-row;\n    @include bruce-structure-flush;\n","line":{"start":8,"end":16}}}]},{"description":"\nHard Padding\n","commentRange":{"start":42,"end":45},"context":{"type":"mixin","name":"bruce-structure-padding-hard","code":"\n    .padding-hard {\n        padding: 1rem;\n    }\n","line":{"start":46,"end":50}},"group":["structure"],"access":"public","file":{"path":"structure/_padding.scss","name":"_padding.scss"},"usedBy":[{"description":"\nPadding Tools\n","context":{"type":"mixin","name":"bruce-structure-padding-all","code":"\n    @include bruce-structure-padding;\n    @include bruce-structure-padding2;\n    @include bruce-structure-padding-hard;\n    @include bruce-structure-padding-mobile;\n    @include bruce-structure-padding-row;\n    @include bruce-structure-flush;\n","line":{"start":8,"end":16}}}]},{"description":"\nMobile Padding\n","commentRange":{"start":52,"end":55},"context":{"type":"mixin","name":"bruce-structure-padding-mobile","code":"\n    .padding-mobile {\n        padding: 1rem;\n        \n        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {\n            padding: 0;\n        }\n    }\n","line":{"start":56,"end":64}},"group":["structure"],"access":"public","require":[{"type":"mixin","name":"bruce-breakpoint"}],"file":{"path":"structure/_padding.scss","name":"_padding.scss"},"usedBy":[{"description":"\nPadding Tools\n","context":{"type":"mixin","name":"bruce-structure-padding-all","code":"\n    @include bruce-structure-padding;\n    @include bruce-structure-padding2;\n    @include bruce-structure-padding-hard;\n    @include bruce-structure-padding-mobile;\n    @include bruce-structure-padding-row;\n    @include bruce-structure-flush;\n","line":{"start":8,"end":16}}}]},{"description":"\nRow Padding\n","commentRange":{"start":66,"end":69},"context":{"type":"mixin","name":"bruce-structure-padding-row","code":"\n    .padding-row {\n        padding-top: 2rem;\n        padding-bottom: 2rem;\n    }\n","line":{"start":70,"end":75}},"group":["structure"],"access":"public","file":{"path":"structure/_padding.scss","name":"_padding.scss"},"usedBy":[{"description":"\nPadding Tools\n","context":{"type":"mixin","name":"bruce-structure-padding-all","code":"\n    @include bruce-structure-padding;\n    @include bruce-structure-padding2;\n    @include bruce-structure-padding-hard;\n    @include bruce-structure-padding-mobile;\n    @include bruce-structure-padding-row;\n    @include bruce-structure-flush;\n","line":{"start":8,"end":16}}}]},{"description":"\nReturns 4 margin props\n","commentRange":{"start":5,"end":12},"context":{"type":"mixin","name":"margin","code":"\n    $propMap: fourProps($props...);\n    margin-top: map-get($propMap, top);   \n    margin-right: map-get($propMap, right);\n    margin-bottom: map-get($propMap, bottom);\n    margin-left: map-get($propMap, left);\n","line":{"start":14,"end":20}},"group":["structure"],"parameter":[{"type":"top","name":"top","description":"margin"},{"type":"right","name":"right","description":"margin"},{"type":"bottom","name":"bottom","description":"margin"},{"type":"left","name":"left","description":"margin\n"}],"access":"public","require":[{"type":"function","name":"fourProps"}],"file":{"path":"structure/_structure.scss","name":"_structure.scss"}},{"description":"\nReturns 4 padding props\n","commentRange":{"start":22,"end":29},"context":{"type":"mixin","name":"padding","code":"\n    $propMap: fourProps($props...);\n    padding-top: map-get($propMap, top);   \n    padding-right: map-get($propMap, right);\n    padding-bottom: map-get($propMap, bottom);\n    padding-left: map-get($propMap, left);\n","line":{"start":31,"end":37}},"group":["structure"],"parameter":[{"type":"top","name":"top","description":"padding"},{"type":"right","name":"right","description":"padding"},{"type":"bottom","name":"bottom","description":"padding"},{"type":"left","name":"left","description":"padding\n"}],"access":"public","require":[{"type":"function","name":"fourProps"}],"file":{"path":"structure/_structure.scss","name":"_structure.scss"}},{"description":"\nEllipsis\n","commentRange":{"start":2,"end":5},"context":{"type":"mixin","name":"bruce-ellipsis","code":"\n    @extend %bruce-ellipsis;\n    @if $cutoff != null {\n        padding-right: $cutoff;      \n    }   \n","line":{"start":7,"end":12}},"group":["typography"],"access":"public","require":[],"file":{"path":"type/_ellipsis.scss","name":"_ellipsis.scss"}},{"description":"\nReturns a media query based on the content of `$bp`.\n\n","commentRange":{"start":2,"end":9},"context":{"type":"mixin","name":"bruce-breakpoint","code":"\n    // Standard \n    $item: map-get($bruce-breakpoints, $bp);\n    \n    @if $item {\n        $bp: $item;\n    }\n\n    @if $bruce-ie == true {\n        @content;\n    } \n\n    @else {\n        @if type-of($bp) == 'number'{\n            @media (min-width: #{$bp})  { \n                @content; \n            }\n        }\n\n        @if type-of($bp) == 'list'{\n            $first:  nth($bp, 1);\n            $bp: nth($bp, 2);\n\n            $item: map-get($bruce-breakpoints, $bp);\n\n            @if $item {\n                $bp: $item;   \n            }\n\n\n            @if type-of($first) == 'string'{\n                @media (#{$first}: #{$bp}) { \n                    @content; \n                }\n            }\n            @elseif type-of($first) == 'number'{\n                @media (min-width: #{$first}) and (max-width: #{$bp}) { \n                    @content; \n                }\n            }\n            @else{\n                @warn 'bruce-breakpoint: wrong syntax';\n            }\n        }\n    }\n","line":{"start":11,"end":56}},"example":[{"type":"scss","code":"\\@include bruce-breakPoint(small) { ... }\n\\@include bruce-breakPoint(max-width: small) { ... }\n"}],"access":"public","content":"","group":["undefined"],"require":[],"file":{"path":"utils/_breakpoints.scss","name":"_breakpoints.scss"},"usedBy":[{"description":"\nBase Padding\n","context":{"type":"mixin","name":"bruce-structure-padding","code":"\n    .padding {\n        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {\n            padding: 1rem;\n        }\n    }  \n","line":{"start":22,"end":28}}},{"description":"\nDouble Padding\n","context":{"type":"mixin","name":"bruce-structure-padding2","code":"\n    .padding2 {\n        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {\n            padding: 2rem;\n        }\n    }\n","line":{"start":34,"end":40}}},{"description":"\nMobile Padding\n","context":{"type":"mixin","name":"bruce-structure-padding-mobile","code":"\n    .padding-mobile {\n        padding: 1rem;\n        \n        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {\n            padding: 0;\n        }\n    }\n","line":{"start":56,"end":64}}}]}]
