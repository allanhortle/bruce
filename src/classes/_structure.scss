
///
/// Returns 4 margin props
/// @group structure
/// @param {list} $props
///

@mixin margin($props) {
    $propMap: fourProps($props);
    margin-bottom: map-get($propMap, bottom);
    margin-left: map-get($propMap, left);
    margin-right: map-get($propMap, right);
    margin-top: map-get($propMap, top);
}

///
/// Returns 4 padding props
/// @group structure
/// @param {list} $props
///

@mixin padding($props) {
    $propMap: fourProps($props);
    padding-bottom: map-get($propMap, bottom);
    padding-left: map-get($propMap, left);
    padding-right: map-get($propMap, right);
    padding-top: map-get($propMap, top);
}

/*
    margin

    .margin-[direction <top|bottom|left|right|row|column>][value <05|2|3>]

    Markup:
    <div class="margin">all margins 1rem</div>
    <div class="margin2">all margins 2rem</div>
    <div class="marginLeft3">left margin 3rem</div>
    <div class="marginRight05">right margin .5rem</div>
    <div class="marginRow">top and bottom margin 1rem</div>
    <div class="marginColumn">left and right margin 1rem</div>

    Styleguide: styles.margin
*/
/*
    padding

    .padding-[direction <top|bottom|left|right|row|column>][value <05|2|3>]

    Markup:
    <div class="padding">all padding 1rem</div>
    <div class="padding2">all padding 2rem</div>
    <div class="paddingLeft3">left padding 3rem</div>
    <div class="paddingRight05">right padding .5rem</div>
    <div class="paddingRow">top and bottom padding 1rem</div>
    <div class="paddingColumn">left and right padding 1rem</div>

    Styleguide: styles.padding
*/

@mixin bruce-classes-structure {

    @each $direction in ('Top', 'Right', 'Bottom', 'Left') {

        @for $i from 0 through 3 {
            $name: $i;
            @if ($i == 0) {
                $i: .5;
                $name: '05';
            }

            @if ($i == 1) {
                $name: '';
            }


            // Apply the all sided rule just once.
            @if ($direction == 'Top') {
                .padding#{$name} {
                    @include padding(#{$i}rem);
                }

                .margin#{$name} {
                    @include margin(#{$i}rem);
                }
            }


            .margin#{$direction}#{$name} {
                margin-#{to_lower_case($direction)}: #{$i}rem;
            }

            .padding#{$direction}#{$name} {
                padding-#{to_lower_case($direction)}: #{$i}rem;
            }

            .position#{$direction}#{$name} {
                #{$direction}: #{$i}rem;
            }

            .paddingRow#{$name} {
                @include padding(#{$i}rem null);
            }

            .marginRow#{$name} {
                @include margin(#{$i}rem null);
            }

            .paddingColumn#{$name} {
                @include padding(null #{$i}rem);
            }

            .marginColumn#{$name} {
                @include margin(null #{$i}rem);
            }

            .margin#{$direction}Auto {
                margin-#{to_lower_case($direction)}: auto;
            }

        }

        .marginRowAuto {
            margin-bottom: auto;
            margin-top: auto;
        }

        .marginColumnAuto {
            margin-left: auto;
            margin-right: auto;
        }

        .hug#{$direction} {
            margin-#{to_lower_case($direction)}: 0;
        }

        .flush#{$direction} {
            padding-#{to_lower_case($direction)}: 0;
        }
    }

    .hug {
        @include margin(0);
    }

    .flush {
        @include padding(0);
    }
}
