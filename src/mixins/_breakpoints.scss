
///
/// Returns a media query based on the content of `$breakpoint`.
/// @group mixin
/// @param {string|value|list} $breakpoint
/// @content
/// @example
///     .class {
///         font-size: 1rem;
///
///         @include BruceBreakpoint('small') {
///             font-size: 2rem;
///         }
///
///         @include BruceBreakpoint(40em) {
///             font-size: 3rem;
///         }
///
///         @include BruceBreakpoint(max-width 40em) {
///             font-size: 4rem;
///         }
///
///         @include BruceBreakpoint(20em 40em) {
///             font-size: 4rem;
///         }
///
///     }
///


@mixin BruceBreakpoint($breakpoint) {
    @if map-has-key($bruce-breakpoints, $breakpoint) {
        $breakpoint: map-get($bruce-breakpoints, $breakpoint);
    }

    @if type-of($breakpoint) == 'number'{
        @media (min-width: #{$breakpoint})  {
            @content;
        }
    }

    @if type-of($breakpoint) == 'list' {
        $first: nth($breakpoint, 1);
        $breakpoint: nth($breakpoint, 2);

        @if map-has-key($bruce-breakpoints, $breakpoint) {
            $breakpoint: map-get($bruce-breakpoints, $breakpoint);
        }


        @if type-of($first) == 'string' {
            @media (#{$first}: #{$breakpoint}) {
                @content;
            }
        }
        @elseif type-of($first) == 'number' {
            @media (min-width: #{$first}) and (max-width: #{$breakpoint}) {
                @content;
            }
        }
        @else {
            @warn 'bruce-breakpoint: wrong syntax';
        }
    }
}
