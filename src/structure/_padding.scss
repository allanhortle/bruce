

@mixin bruce-structure-padding-all {
    @warn '[deprecated]: bruce-structure-padding-all. Use bruce-classes instead';
    @include bruce-structure-padding;
    @include bruce-structure-padding2;
    @include bruce-structure-padding-hard;
    @include bruce-structure-padding-mobile;
    @include bruce-structure-padding-row;
    @include bruce-structure-flush;
}


@mixin bruce-structure-padding {
    @warn '[deprecated]: bruce-structure-padding. Use bruce-classes instead';
    .padding {
        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {
            padding: 1rem;
        }
    }  
}


@mixin bruce-structure-padding2 {
    @warn '[deprecated]: bruce-structure-padding2. Use bruce-classes instead';
    .padding2 {
        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {
            padding: 2rem;
        }
    }
}


@mixin bruce-structure-padding-hard {
    @warn '[deprecated]: bruce-structure-padding-hard. Use bruce-classes instead';
    .padding-hard {
        padding: 1rem;
    }
}


@mixin bruce-structure-padding-mobile {
    @warn '[deprecated]: bruce-structure-padding-mobile. Use bruce-classes instead';
    .padding-mobile {
        padding: 1rem;
        
        @include bruce-breakpoint(map-fetch($bruce-breakpoints, tiny)) {
            padding: 0;
        }
    }
}

@mixin bruce-structure-padding-row {
    @warn '[deprecated]: bruce-structure-padding-row. Use bruce-classes instead';
    .padding-row {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
}

@mixin bruce-structure-flush {
    @warn '[deprecated]: bruce-structure-flush. Use bruce-classes instead';

    .flush {
        padding: 0;
    }

    .flush-right {
        padding-right: 0;
    }

    // @each $name in $bruce-directions {
    //     @debug $name;
    //     .flush-#{$name} {
    //         padding-#{$name}: 0;
    //     }
    // }
}
